name: Patu Performance Triggerable Workflow

on:
  issue_comment:
    types: [created, edited]

jobs:
  deploy-perf-scale:
    name: deploy-perf-scale
    if: contains(github.event.comment.body, '/run_bbq') && (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'CONTRIBUTORS')
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        cni: ["patu", "flannel"]
        kube-distribution: ["kubeadm"]
    env:
      JOB_NAME: "patu-triggered-perfscale-${{ matrix.k8s-distro }}-${{ matrix.cni }}"
      MATRIX_CNI: ${{ matrix.cni }}
      KUBE_DIST: ${{ matrix.k8s-distro }}
      AWS_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ANSIBLE_VAULT_PASSWORD_FILE: "/home/runner/work/patu/patu/vault-secret.txt"
      ANSIBLE_PRIVATE_KEY_FILE: "/home/runner/work/patu/patu/test/ansible/periodic/patu-ci.pem"
      ANSIBLE_REMOTE_USER: ${{ secrets.ANSIBLE_USER }}
      ANSIBLE_HOST_KEY_CHECKING: "False"

    steps:
    - name: Checkout Triggered PR
      uses: actions/checkout@v2
    - name: Checkout Pull Request
      run: hub pr checkout ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Ansible and dependencies
      run: pip3.10 install boto boto3 ansible-vault ansible-core==2.13.3

    - name: Install amazon.aws Ansible library
      run: ansible-galaxy collection install amazon.aws

    - name: Create ansible ssh key and vault passwd file
      run: |
        echo "${{ secrets.ANSIBLE_SSH_KEY }}" > /home/runner/work/patu/patu/test/ansible/periodic/patu-ci.pem
        chmod 0400 /home/runner/work/patu/patu/test/ansible/periodic/patu-ci.pem
        echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > /home/runner/work/patu/patu/vault-secret.txt
        chmod 0400 /home/runner/work/patu/patu/vault-secret.txt

    - name: Deploy EC2 Playbooks
      run: |
        ansible-playbook -vv ./test/ansible/periodic/deploy.yml --extra-vars "MATRIX_CNI=${{ matrix.cni }}" -i /home/runner/work/patu/patu/test/ansible/periodic/inventory.txt --private-key /home/runner/work/patu/patu/test/ansible/periodic/patu-ci.pem

    - name: Display Iperf3 Results for ${{ matrix.cni }}
      run: cat ./test/ansible/periodic/iperf-results-${{ matrix.cni }}.txt

# Temp disable of cleanup for node debugging
#  clean:
#    name: terminate-tagged-ec2-instances
#    runs-on: ubuntu-latest
#    if: success() || failure()
#    needs: [ deploy-perf-scale ]
#    timeout-minutes: 10
#    env:
#      AWS_REGION: "us-east-1"
#      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      ANSIBLE_VAULT_PASSWORD_FILE: "/home/runner/work/patu/patu/vault-secret.txt"
#      ANSIBLE_PRIVATE_KEY_FILE: "/home/runner/work/patu/patu/test/ansible/periodic/patu-ci.pem"
#      ANSIBLE_REMOTE_USER: ${{ secrets.ANSIBLE_USER }}
#      ANSIBLE_HOST_KEY_CHECKING: "False"
#    steps:
#    - name: checkout
#      uses: actions/checkout@v2
#
#    - uses: actions/setup-python@v4
#      with:
#        python-version: '3.10'
#
#    - name: Install Ansible and dependencies
#      run: pip3.10 install boto boto3 ansible-vault ansible-core==2.13.3
#
#    - name: Install amazon.aws Ansible library
#      run: ansible-galaxy collection install amazon.aws
#
#    - name: Create ansible ssh key and vault passwd file
#      run: |
#        echo "${{ secrets.ANSIBLE_SSH_KEY }}" > /home/runner/work/patu/patu/test/ansible/periodic/patu-ci.pem
#        chmod 0400 /home/runner/work/patu/patu/test/ansible/periodic/patu-ci.pem
#        echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > /home/runner/work/patu/patu/vault-secret.txt
#        chmod 0400 /home/runner/work/patu/patu/vault-secret.txt
#
#    - name: Deploy the EC2 Terminate Playbook
#      run: |
#        ansible-playbook -vv ./test/ansible/periodic/terminate-instances.yml
